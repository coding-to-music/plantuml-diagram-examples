@startuml Communications-updateWellInfo-1a
!theme toy 
title Communications-updateWellInfo-1
start

' :from part 1; 

' static void updateWellInfo(RobotController rc, WellInfo well) throws GameActionException {
' Boolean printToConsole = false;
' Boolean sometimesTrue = false;

' if (printToConsole || sometimesTrue) {
'     System.out.println(logDetails + " PPPP0 updateWellInfo " );
' }

:updateWellInfo(RobotController rc, WellInfo well);
:Boolean stopNow = false;
while (for (int i = 0; i < MAX_STARTING_WELLS; i++) )
    if (!stopNow) then (true)                
        if (wellLocs[i] == null) then (true)
            :stopNow = true;
            :wellLocs[i] = well.getMapLocation();
            :wellTypes[i] = well.getResourceType();
            ' // if (rc.readSharedArray(i) == 0) {
            ' break;
            ' // }
        else (no)
            :the array has a value, see if the well is already known;
            if (wellLocs[i] == well.getMapLocation()) then (true)
                :stopNow = true;
            else (no)
            endif
        endif
    else (no)
    endif
endwhile

:return void;

stop
@enduml


            ' // wellLocs[i] = (intToLocation(rc, rc.readSharedArray(i)));
            ' if (printToConsole || sometimesTrue) {
            '     System.out.println(logDetails + " PPPP1 updateWellInfo rc.readSharedArray(i) " + i + " well.getResourceType() " + well.getResourceType() + " well.getMapLocation() " + well.getMapLocation() );
            '     // System.out.println(logDetails + " PPPP1 updateWellInfo rc.readSharedArray(i) == 0 " + rc.readSharedArray(i) );
            ' }
                ' if (printToConsole || sometimesTrue) {
                '     System.out.println(logDetails + " PPPP2 updateWellInfo rc.readSharedArray(i) we already have this location " + i + " well.getResourceType() " + well.getResourceType() + " well.getMapLocation() " + well.getMapLocation() );
                '     // System.out.println(logDetails + " PPPP1 updateWellInfo rc.readSharedArray(i) == 0 " + rc.readSharedArray(i) );
                '     rc.resign();
'                 }

'             } 
'         }
'     }
' }
    
' :Continue to part3; 

' if (if target != null) then (true)
'     :we have a nearby enemy, move away;
'     if (if rc.canAttack(target.getLocation())) then (true)
'         :rc.attack(target.getLocation());
'         :rc.setIndicatorString(" AAAA0 Amplifier attacking " + target.getLocation());
'     else (no)
'     endif    
'     :Pathing.moveTowards(rc, target.getLocation());
'     :rc.setIndicatorString(" BBBB0 Pathing.moveTowards " + target.getLocation());
' else (no)
'     :no nearby enemy, good;
'     :below is about joining with other launchers;
'     :RobotInfo[] allies = rc.senseNearbyRobots(9, rc.getTeam());
'     :int lowestID = rc.getID();
'     :MapLocation leaderPos = null;
'     while (RobotInfo ally : allies)
'         if (if ally.getType() != RobotType.LAUNCHER) then (true)
'             :continue;
'         else (no)
'         endif    
'         if (if ally.getID() < lowestID) then (true)
'             :lowestID = ally.getID();
'             :leaderPos = ally.getLocation();
'         else (no)
'         endif    
'     endwhile
'     if (if leaderPos != null) then (true)
'         :Pathing.moveTowards(rc, leaderPos);
'         :rc.setIndicatorString("Following " + lowestID);
'     else (no)
'         :MapLocation center = new MapLocation(rc.getMapWidth()/2, rc.getMapHeight()/2);
'         ' // MapLocation center = goalLoc;
'         :Pathing.moveTowards(rc, center);
'         :rc.setIndicatorString("I'm the leader! moving toward center " + center);
'     endif    
' endif    
' :Also try to move randomly;
' :Direction dir = RobotPlayer.directions[RobotPlayer.rng.nextInt(RobotPlayer.directions.length)];
' if (if rc.canMove(dir)) then (true)
'     :rc.move(dir);
'     :rc.setIndicatorString(" YYYY0 rc.move(dir) " + dir);
' else (no)
' endif    


